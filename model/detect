from tensorflow.keras.models import load_model
import cv2
import numpy as np

# Load the pre-trained model
model = load_model('model/facial_features_model.h5')

def detect_features(image_path):
    # Load image
    image = cv2.imread(image_path)
    image_resized = cv2.resize(image, (150, 150))
    image_array = np.expand_dims(image_resized, axis=0) / 255.0

    # Predict features
    predictions = model.predict(image_array)
    feature_labels = ['Heart', 'Oblong', 'Oval', 'Round', 'Square']

    # Get the predicted label
    predicted_label = feature_labels[np.argmax(predictions)]

    # Provide recommendations based on the predicted label
    recommendations = {
        'Heart': 'Try angular glasses to contrast with your face shape.',
        'Oblong': 'Soft, round glasses can balance the sharp angles.',
        'Oval': 'Most styles of glasses suit this face shape.',
        'Round': 'Look for frames that add width to the forehead.',
        'Square': 'Cat-eye glasses are great for balancing this shape.'
    }

    recommendation = recommendations.get(predicted_label, 'No recommendation available.')

    return predicted_label, recommendation

# Example usage
predicted_label, recommendation = detect_features('path/to/image.jpg')
print(f'Predicted Face Shape: {predicted_label}')
print(f'Recommendation: {recommendation}')
